---
k8s_setup_repositories: true     # Set to false if repositories are provided by other means (such as Foreman/Satellite)
k8s_repository_id: 'kubernetes'  # Yum ID for the kubernetes repository, only required if k8s_setup_repositories == false
k8s_version: '1.22'            # Which Kubernetes version to prepare/install

k8s_role: 'control-plane'      # control-plane or worker
k8s_cluster_group: 'k8s_cluster'     # Inventory group that contains all nodes of this cluster

# The following setting allows to remap public registries to private mirrors
k8s_registries: []
#   - prefix: 'docker.io'               # Registry name
#     location: 'registry.example.com'  # Private mirror
#     validate_certs: true              # Validate SSL certificates, defaults to true
#     blocked: false                    # If true, this repository is disabled in CRI-O, defaults to false

# The following registries can be searched without full image names
# e.g. docker.io/namespace/my-image:v2
k8s_unqualified_search_registries:
  - 'registry.fedoraproject.org'
  - 'registry.access.redhat.com'
  - 'registry.centos.org'
  - 'docker.io'

## Kubeadm init arguments
k8s_apiserver_advertise_address: ''   # Instead of using the NIC that has the default gateway, use this IP
                                      # to advertise the k8s API server on
k8s_pod_network_cidr: '10.96.0.0/12'  # If set, override the default pod network range used
k8s_control_plane_endpoint: ''        # Required if using multiple control-plane nodes.
                                      # Set to a load balanced URI, e.g. k8s-cluster.example.com:6443
k8s_cluster_tls: false                # Enables ServerTLSBootstrap for Kubelet, requires SSL certificate
                                      # either by hand or by some other means (such as kubelet-csr-approver)

k8s_debug: false  # Set to true to log tasks that handle sensitive data
